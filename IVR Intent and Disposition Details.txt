Register 'hdfs:///user/jjonnada/timeFunctions.py' using jython as time;
DEFINE LOAD_IDM com.tfs.idm.pig.IDMEventLoadFunc('hdfs:///lib/idm-schemas/eventIdmSchema_current.avsc');
data = LOAD '/raw/prod/rtdp/idm/events/cap1/year=2016/month=07/day={25}/*/*/*.avro' using LOAD_IDM;
appLogFilter = FILTER data BY specificEventType == 'SpeechPlatformAppLogEvent';
appLogInfo = FOREACH appLogFilter GENERATE header.timeEpochMillisUTC as time, header.channelSessionId as uuid, body#'label' as logtag, body#'optMessage' as value;
variable8Filter = FILTER appLogInfo BY logtag == 'com.tellme.proprietary.capitalone.card.callvariable8';
dispositionFilter = FILTER appLogInfo BY logtag == 'com.tellme.proprietary.capitalone.card.disposition.ivrcompletedcall' OR logtag == 'com.tellme.proprietary.capitalone.card.disposition.deleveragedcall' OR logtag == 'com.tellme.proprietary.capitalone.card.disposition.agenttransfer' OR logtag == 'com.tellme.proprietary.capitalone.card.disposition.abandonedcall';
variable8DispJoin = JOIN variable8Filter BY uuid, dispositionFilter BY uuid;
variable8DispJoinDistinct = DISTINCT variable8DispJoin;
variable8DispCount = FOREACH (GROUP variable8DispJoinDistinct BY ($3,$6)) GENERATE FLATTEN(group), COUNT(variable8DispJoinDistinct);
STORE variable8DispCount INTO 'cap1_intent_disposition_25Jul';